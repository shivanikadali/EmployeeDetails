quarkus.datasource.db-kind=mssql
quarkus.datasource.username=shivanikadali
quarkus.datasource.password=shivani@2000
quarkus.datasource.jdbc.url=jdbc:sqlserver://localhost:1433;DatabaseName=msdb;encrypt=true;trustServerCertificate=true;

quarkus.http.port=9090

# quarkus.hibernate-orm.database.generation = drop-and-create

# Set up H2 datasource for tests
# %test.quarkus.datasource.db-kind=h2
# %test.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
# %test.quarkus.datasource.jdbc.driver=org.h2.Driver
# %test.quarkus.datasource.username=sa
# %test.quarkus.datasource.password=

quarkus.oidc.auth-server-url=http://localhost:8080/realms/dive-dev1
# to send authorization bearer in the request to get the access token or authentication berear
# security schemes basic,jwt,oauth2,oidc,oauth2-implicit
quarkus.smallrye-openapi.security-scheme=oidc
quarkus.smallrye-openapi.security-scheme-name=keycloak
quarkus.smallrye-openapi.oidc-open-id-connect-url=http://localhost:8080/realms/dive-dev1/.well-known/openid-configuration

# quarkus.hibernate-orm. unsupported-properties."hibernate.physical_naming_strategy"=org.hibernate.boot.model.naming.CamelCaseToUnderscoreNamingStrategy

#  authenticated ->authenticated,Covers create-order api
# all the rest api's in this applications should be authenticated //this cofig tells us the path information for authenticated api's
quarkus.http.auth.permission.authenticated.paths=/*
# says which policy we need to use we use authenticated here
quarkus.http.auth.permission.authenticated.policy=authenticated



# @permit all ->permit no authorization
quarkus.http.auth.permission.public-api.paths=/employee/all, /q/swagger-ui/*, /q/openapi
quarkus.http.auth.permission.public-api.policy=permit


#RolesAllowed-> roles-allowed 
quarkus.http.auth.policy.admin-role-policy.roles-allowed=admin    
# policy creation with name ->admin-role-policy
quarkus.http.auth.permission.admin-role-api.paths=/employee/delete/{id}
# admin-role-policy is assigned to these apis
quarkus.http.auth.permission.admin-role-api.policy=admin-role-policy

quarkus.http.auth.policy.manager-role-policy.roles-allowed=manager    
quarkus.http.auth.permission.manager-role-apis.paths=/employee/update/{id},/employee/by/{id}
quarkus.http.auth.permission.manager-role-apis.policy=manager-role-policy

#RolesAllowed-> roles-allowed 
quarkus.http.auth.policy.ceo-role-policy.roles-allowed=ceo    
quarkus.http.auth.permission.ceo-role-api.paths=/employee/create
quarkus.http.auth.permission.ceo-role-api.policy=ceo-role-policy


# @DenyAll->deny present not using in our restapi's
# connect to keycloak
# baseurl of the keycloak/realms/realm name